name: test install

on:
  push:
    paths-ignore:
      - '.gitignore'
      - '*.md'
      - 'LICENSE'
  pull_request:
    paths-ignore:
      - '.gitignore'
      - '*.md'
      - 'LICENSE'
  release:
    types:
      - created

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.6', '3.9', '3.10']


    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: print python version, noisily
        run: |
          python3 --version

      - name: install test dependencies
        run: |
          make dev-all-install


      - name: test install from github branch zip works
        run: |
          branch="${{ github.head_ref || github.ref_name }}"
          # "
          python3 -m venv env && . env/bin/activate
          python3 -m pip install wheel
          PERSONAL_TOKEN="${{ secrets.PERSONAL_TOKEN }}" ./test_zip_install.sh "${branch}"

      - name: run pytest tests
        run: |
          rm -rf env
          make test-python

      - name: archive test reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: test-coverage
          path: |
            ./htmlcov
            ./pytest_report.html

      - name: run perl tests
        if: always()
        run: |
          rm -rf env
          make test-perl

      - name: build py docs
        if: always()
        run: |
          rm -rf env
          make docs

      - name: archive docs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: ./docs/build



